name: Docker Build and Deploy

on:
  push:
    branches: [ main, develop ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: planbookai

permissions:
  contents: read
  packages: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build and push AuthService
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./src/AuthService/Dockerfile
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/auth-service:${{ github.run_id }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Build and push UserService
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./src/UserService/Dockerfile
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/user-service:${{ github.run_id }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Build and push PlanService
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./src/PlanService/Dockerfile
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/plan-service:${{ github.run_id }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Build and push TaskService
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./src/TaskService/Dockerfile
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/task-service:${{ github.run_id }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Build and push GatewayService
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./src/GatewayService/Dockerfile
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/gateway-service:${{ github.run_id }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to production
      run: |
        echo "Deployment completed successfully!"
